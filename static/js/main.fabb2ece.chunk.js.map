{"version":3,"sources":["components/Tree.js","App.js","reportWebVitals.js","index.js"],"names":["Tree","_ref","photos","fallenLeaf","setFallenLeaf","useState","React","createElement","className","map","photo","index","key","id","src","url","alt","story","onClick","shakeTree","length","randomIndex","Math","floor","random","App","setPhotos","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"sQAoCeA,MAjCFC,IAAiB,IAAhB,OAAEC,GAAQD,EACtB,MAAOE,EAAYC,GAAiBC,mBAAS,MAS7C,OACEC,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,UACfF,IAAAC,cAAA,OAAKC,UAAU,YACZN,EAAOO,IAAI,CAACC,EAAOC,IAClBL,IAAAC,cAAA,OAAKK,IAAKF,EAAMG,IAAMF,EAAOH,UAAU,QACrCF,IAAAC,cAAA,OAAKO,IAAKJ,EAAMK,IAAKC,IAAKN,EAAMO,YAKxCX,IAAAC,cAAA,UAAQC,UAAU,eAAeU,QAnBnBC,KAChB,GAAIjB,EAAOkB,OAAS,EAAG,CACrB,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWtB,EAAOkB,QACtDhB,EAAcF,EAAOmB,OAgBgC,2BACpDlB,GACCG,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKO,IAAKX,EAAWY,IAAKC,IAAKb,EAAWc,QAC1CX,IAAAC,cAAA,SAAIJ,EAAWc,U,MCcVQ,MAvCHA,KACV,MAAOvB,EAAQwB,GAAarB,mBAAS,IA6BrC,OA3BAsB,oBAAU,KAERD,EAAU,CACR,CAAEb,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,2BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,gCAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,6BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,2BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,gCAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,6BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,2BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,gCAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,6BAC3C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,2BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,gCAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,6BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,6BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,2BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,gCAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,6BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,2BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,gCAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,6BAC5C,CAAEJ,GAAI,GAAIE,IAAK,qBAAsBE,MAAO,gCAG7C,IAGDX,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,SAAG,8BACHD,IAAAC,cAACP,EAAI,CAACE,OAAQA,MC1BL0B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK9B,IAAkD,IAAjD,OAAE+B,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASnC,EACpE+B,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACkB,EAAG,QAORG,M","file":"static/js/main.fabb2ece.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Tree.css';\r\n\r\nconst Tree = ({ photos }) => {\r\n  const [fallenLeaf, setFallenLeaf] = useState(null);\r\n\r\n  const shakeTree = () => {\r\n    if (photos.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * photos.length);\r\n      setFallenLeaf(photos[randomIndex]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tree-container\">\r\n      <div className=\"tree\">\r\n        <div className=\"trunk\"></div>\r\n        <div className=\"branches\">\r\n          {photos.map((photo, index) => (\r\n            <div key={photo.id || index} className=\"leaf\">\r\n              <img src={photo.url} alt={photo.story} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button className=\"shake-button\" onClick={shakeTree}>Balançar a Árvore</button>\r\n      {fallenLeaf && (\r\n        <div className=\"fallen-leaf\">\r\n          <img src={fallenLeaf.url} alt={fallenLeaf.story} />\r\n          <p>{fallenLeaf.story}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;","import React, { useState, useEffect } from 'react';\nimport Tree from './components/Tree';\nimport './App.css';\n\nconst App = () => {\n  const [photos, setPhotos] = useState([]);\n\n  useEffect(() => {\n    // Simula o carregamento de fotos\n    setPhotos([\n      { id: 1, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 2, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 3, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 4, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 5, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 6, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 7, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 8, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 9, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 10, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 11, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 12, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 13, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 14, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 15, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 16, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 17, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 18, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 19, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      { id: 20, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      // Adicione mais fotos conforme necessário\n    ]);\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>Nossa Árvore de Memórias</h1>\n      <p>4 Anos de Amor e Aventuras</p>\n      <Tree photos={photos} />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}