{"version":3,"sources":["components/Tree.js","components/PhotoCard.js","App.js","hooks/useShakeDetector.js","reportWebVitals.js","index.js"],"names":["Tree","_ref","photos","React","createElement","className","slice","map","photo","index","key","id","src","url","alt","story","PhotoCard","App","setPhotos","useState","currentPhoto","setCurrentPhoto","useEffect","callback","handleShake","length","randomIndex","Math","floor","random","lastX","lastY","lastZ","handleMotion","event","accelerationIncludingGravity","x","y","z","abs","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wRAkBeA,MAfFC,IAAiB,IAAhB,OAAEC,GAAQD,EACtB,OACEE,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,UACfF,IAAAC,cAAA,OAAKC,UAAU,YACZH,EAAOI,MAAM,EAAG,IAAIC,IAAI,CAACC,EAAOC,IAC/BN,IAAAC,cAAA,OAAKM,IAAKF,EAAMG,IAAMF,EAAOJ,UAAU,QACrCF,IAAAC,cAAA,OAAKQ,IAAKJ,EAAMK,IAAKC,IAAKN,EAAMO,a,MCE7BC,MATGf,IAAgB,IAAf,MAAEO,GAAOP,EAC1B,OACEE,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,OAAKQ,IAAKJ,EAAMK,IAAKC,IAAKN,EAAMO,QAChCZ,IAAAC,cAAA,SAAII,EAAMO,S,MC+BDE,MAhCHA,KACV,MAAOf,EAAQgB,GAAaC,mBAAS,KAC9BC,EAAcC,GAAmBF,mBAAS,MAEjDG,oBAAU,KAERJ,EAAU,CACR,CAAEP,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,2BAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,gCAC3C,CAAEJ,GAAI,EAAGE,IAAK,qBAAsBE,MAAO,gCAG5C,IChB4BQ,MD2B/B,OC3B+BA,EDkBXC,KAClB,GAAItB,EAAOuB,OAAS,EAAG,CACrB,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAW3B,EAAOuB,QACtDJ,EAAgBnB,EAAOwB,MCpB3BJ,oBAAU,KACR,IAAIQ,EAAOC,EAAOC,EAClB,MAEMC,EAAgBC,IACpB,MAAM,6BAAEC,GAAiCD,GACnC,EAAEE,EAAC,EAAEC,EAAC,EAAEC,GAAMH,EAEC,qBAAVL,GACMH,KAAKY,IAAIH,EAAIN,GACbH,KAAKY,IAAIF,EAAIN,GACbJ,KAAKY,IAAID,EAAIN,GATR,IAYlBT,IAIJO,EAAQM,EACRL,EAAQM,EACRL,EAAQM,GAKV,OAFAE,OAAOC,iBAAiB,eAAgBR,GAAc,GAE/C,KACLO,OAAOE,oBAAoB,eAAgBT,GAAc,KAE1D,CAACV,IDDFpB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAACJ,EAAI,CAACE,OAAQA,IACbkB,GAAgBjB,IAAAC,cAACY,EAAS,CAACR,MAAOY,MErB1BuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK7C,IAAkD,IAAjD,OAAE8C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASlD,EACpE8C,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrD,IAAAC,cAACD,IAAMsD,WAAU,KACftD,IAAAC,cAACa,EAAG,QAOR0B,M","file":"static/js/main.a5ed843f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Tree.css';\r\n\r\nconst Tree = ({ photos }) => {\r\n  return (\r\n    <div className=\"tree\">\r\n      <div className=\"trunk\"></div>\r\n      <div className=\"branches\">\r\n        {photos.slice(0, 20).map((photo, index) => (\r\n          <div key={photo.id || index} className=\"leaf\">\r\n            <img src={photo.url} alt={photo.story} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;","import React from 'react';\r\nimport './PhotoCard.css';\r\n\r\nconst PhotoCard = ({ photo }) => {\r\n  return (\r\n    <div className=\"photo-card\">\r\n      <img src={photo.url} alt={photo.story} />\r\n      <p>{photo.story}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoCard;","import React, { useState, useEffect } from 'react';\nimport Tree from './components/Tree';\nimport PhotoCard from './components/PhotoCard';\nimport { useShakeDetector } from './hooks/useShakeDetector';\nimport './App.css';\n\nconst App = () => {\n  const [photos, setPhotos] = useState([]);\n  const [currentPhoto, setCurrentPhoto] = useState(null);\n\n  useEffect(() => {\n    // Simula o carregamento de fotos de um arquivo JSON ou API\n    setPhotos([\n      { id: 1, url: '/images/photo1.jpg', story: 'Nosso primeiro encontro' },\n      { id: 2, url: '/images/photo2.jpg', story: 'Nossa primeira viagem juntos' },\n      { id: 3, url: '/images/photo3.jpg', story: 'O dia do pedido de namoro' },\n      // Adicione mais fotos conforme necessÃ¡rio\n    ]);\n  }, []);\n\n  const handleShake = () => {\n    if (photos.length > 0) {\n      const randomIndex = Math.floor(Math.random() * photos.length);\n      setCurrentPhoto(photos[randomIndex]);\n    }\n  };\n\n  useShakeDetector(handleShake);\n\n  return (\n    <div className=\"app\">\n      <h1>Nossos 4 Anos de Amor</h1>\n      <Tree photos={photos} />\n      {currentPhoto && <PhotoCard photo={currentPhoto} />}\n    </div>\n  );\n};\n\nexport default App;","import { useEffect } from 'react';\r\n\r\nexport const useShakeDetector = (callback) => {\r\n  useEffect(() => {\r\n    let lastX, lastY, lastZ;\r\n    const SHAKE_THRESHOLD = 15;\r\n\r\n    const handleMotion = (event) => {\r\n      const { accelerationIncludingGravity } = event;\r\n      const { x, y, z } = accelerationIncludingGravity;\r\n\r\n      if (typeof lastX !== \"undefined\") {\r\n        const deltaX = Math.abs(x - lastX);\r\n        const deltaY = Math.abs(y - lastY);\r\n        const deltaZ = Math.abs(z - lastZ);\r\n\r\n        if (deltaX + deltaY + deltaZ > SHAKE_THRESHOLD) {\r\n          callback();\r\n        }\r\n      }\r\n\r\n      lastX = x;\r\n      lastY = y;\r\n      lastZ = z;\r\n    };\r\n\r\n    window.addEventListener('devicemotion', handleMotion, true);\r\n\r\n    return () => {\r\n      window.removeEventListener('devicemotion', handleMotion, true);\r\n    };\r\n  }, [callback]);\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}